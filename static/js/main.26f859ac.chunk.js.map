{"version":3,"sources":["components/Main/Main.module.css","components/Preloader/Preloader.module.css","history/history.js","constants/api.js","reducers/chunkPickerReducer.js","constants/appConstants.js","reducers/preloaderReducer.js","reducers/reducers.js","constants/actionTypes.js","store/configureStore.js","store/localStorage.js","serviceWorker.js","constants/routing.js","components/App/App.js","actions/chunkPickerAction.js","js/FileStream.js","actions/fileActions.js","actions/preloaderActions.js","components/ChunkPicker/ChunkPicker.js","components/DropZone/DropZone.js","components/Main/Main.js","components/Preloader/Preloader.js","constants/colors.js","components/Main/MainContainer.js","routes.js","index.js","components/ChunkPicker/ChunkPicker.module.css","components/DropZone/DropZone.module.css","components/App/App.module.css"],"names":["module","exports","Main","Preloader","browserHistory","useRouterHistory","createHistory","basename","initialState","chunkSize","showPreloader","reducers","combineReducers","routing","routerReducer","chunkPicker","state","arguments","length","undefined","action","type","Object","objectSpread","payload","preloader","configureStore","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","logger","createLogger","router","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","throttle","stringify","setItem","_unused","saveState","getState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","App","props","children","react_default","a","createElement","id","className","styles","setChunkSize","size","readTypes","AS_BINARY_STRING","AS_TEXT","AS_DATA_URL","AS_ARRAY_BUFFER","FileStream","classCallCheck","this","defineProperty","_chunkSize","writable","value","_fileStreamWriterAsync","classPrivateFieldLooseBase","createClass","key","file","typeOfReading","onLoadFileCallback","onLoadChunkCallback","FileStreamException","values","includes","stop","step","FileStreamReaderAsync","read","params","fileStreamReaderAsyncPromise","FileStreamReaderAsyncPromise","validate","chunk","onWriteChunkCallback","FileStreamWriterAsync","write","onWriteFileCallback","close","message","_message","start","_start","_stop","_step","_typeOfReading","_fileReader","FileReader","_this","onloadend","event","slice","Promise","resolve","reject","fileReader","next","_this2","_file","_writer","_encode","_onExitPage","abort","fileStream","streamSaver","createWriteStream","name","getWriter","TextEncoder","prototype","encode","bind","isSecureContext","addEventListener","data","target","result","removeEventListener","onDropFiles","acceptedFiles","rejectedFiles","dispatch","sort","leftFile","rightFile","startFilesProcessing","forEach","index","readAsync","fileIsLoaded","fileIsWritten","finishFilesProcessing","loaded","writeAsync","e","filesProcessingError","files","ChunkPicker","context","possibleConstructorReturn","getPrototypeOf","call","handleOnChange","assertThisInitialized","Number","chunkSizeValues","map","FormControlLabel_default","concat","classes","label","FormControlLabel","toString","control","Radio_default","color","labelPlacement","FormControl_default","FormLabel_default","root","FormLabel","focused","RadioGroup_default","RadioGroup","aria-label","onChange","showListOfRadioButtons","Component","DropZone","handleOnDrop","dist_es","onDrop","Dropzone","components_ChunkPicker_ChunkPicker","components_DropZone_DropZone","colors","react_md_spinner_esm","color1","color2","color3","color4","preloaderColors","MainContainer","_this$props","components_Main_Main","components_Preloader_Preloader","getMainComponent","getPreloaderComponent","connect","bindActionCreators","routes","react_router_es","path","component","to","history","syncHistoryWithStore","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","es","BrowserRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26f859ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__22WzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__PcQp7\"};","import {useRouterHistory} from 'react-router';\r\nimport {createHistory} from 'history';\r\n\r\nimport * as api from '../constants/api';\r\n\r\nexport const browserHistory = useRouterHistory(createHistory)({\r\n    basename: api.BASE_URL\r\n});\r\n","export const BASE_URL = \"/file.stream.app\";\r\n","import * as types from '../constants/actionTypes';\r\nimport * as appConstants from '../constants/appConstants';\r\n\r\nconst initialState = {\r\n    chunkSize: appConstants.TEN_MEGABYTES\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.SET_CHUNK_SIZE_TYPE: {\r\n            return {\r\n                ...state,\r\n                chunkSize: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","export const PRELOADER_SIZE = 48;\r\nexport const EIGHT_BYTES = 8;\r\nexport const ONE_KILOBYTE = 1024;\r\nexport const ONE_MEGABYTE = 1048576;\r\nexport const TEN_MEGABYTES = 10485760;\r\nexport const ONE_HUNDRED_MEGABYTES = 104857600;\r\nexport const ONE_GIGABYTE = 1073741824;\r\n","import * as types from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    showPreloader: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.START_PRELOADER_TYPE: {\r\n            return {\r\n                ...state,\r\n                showPreloader: action.payload\r\n            }\r\n        }\r\n        case types.FINISH_PRELOADER_TYPE: {\r\n            return {\r\n                ...state,\r\n                showPreloader: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport {routerReducer} from 'react-router-redux';\r\n\r\nimport chunkPickerReducer from './chunkPickerReducer';\r\nimport preloaderReducer from './preloaderReducer';\r\n\r\nconst reducers = combineReducers({\r\n    routing: routerReducer,\r\n    chunkPicker: chunkPickerReducer,\r\n    preloader: preloaderReducer,\r\n});\r\n\r\nexport default reducers;\r\n","export const SET_CHUNK_SIZE_TYPE = \"SET_CHUNK_SIZE_TYPE\";\r\nexport const START_FILES_PROCESSING_TYPE = \"START_FILES_PROCESSING_TYPE\";\r\nexport const FILE_IS_LOADED_TYPE = \"FILE_IS_LOADED_TYPE\";\r\nexport const FILE_IS_WRITTEN_TYPE = \"FILE_IS_WRITTEN_TYPE\";\r\nexport const FINISH_FILES_PROCESSING_TYPE = \"FINISH_FILES_PROCESSING_TYPE\";\r\nexport const FILES_PROCESSING_ERROR_TYPE = \"FILES_PROCESSING_ERROR_TYPE\";\r\nexport const START_PRELOADER_TYPE = \"START_PRELOADER_TYPE\";\r\nexport const FINISH_PRELOADER_TYPE = \"FINISH_PRELOADER_TYPE\";\r\n","import {applyMiddleware, createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger';\r\nimport {routerMiddleware} from 'react-router-redux';\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport {loadState, saveState} from './localStorage';\r\nimport {browserHistory} from '../history/history';\r\nimport reducers from '../reducers/reducers';\r\n\r\nconst configureStore = () => {\r\n    const persistedState = loadState();\r\n    const logger = createLogger();\r\n    const router = routerMiddleware(browserHistory);\r\n    const store = createStore(reducers, persistedState, composeWithDevTools(applyMiddleware(thunk, logger, router)));\r\n    store.subscribe(throttle(() => {\r\n        saveState({\r\n            chunkPicker: store.getState().chunkPicker\r\n        });\r\n    }, 1000));\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (module.hot) {\r\n            module.hot.accept(\"../reducers/reducers\", () => {\r\n                store.replaceReducer(reducers);\r\n            });\r\n        }\r\n    }\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(\"state\");\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = state => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem(\"state\", serializedState);\r\n    } catch {\r\n    }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                        \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","export const ROOT_ROUTE = \"/\";\r\nexport const MAIN_ROUTE = \"/main\";\r\nexport const OTHER_ROUTE = \"*\";\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './App.module.css';\r\n\r\nconst App = props => {\r\n    const {children} = props;\r\n    return (\r\n        <div id={\"App\"}\r\n             className={styles.App}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nApp.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default App;\r\n","import * as types from '../constants/actionTypes';\r\n\r\nexport const setChunkSize = size => {\r\n    return {\r\n        type: types.SET_CHUNK_SIZE_TYPE,\r\n        payload: size\r\n    }\r\n};\r\n","import streamSaver from 'streamsaver';\r\n\r\nexport const readTypes = {\r\n    AS_BINARY_STRING: \"readAsBinaryString\",\r\n    AS_TEXT: \"readAsText\",\r\n    AS_DATA_URL: \"readAsDataURL\",\r\n    AS_ARRAY_BUFFER: \"readAsArrayBuffer\"\r\n};\r\n\r\nexport class FileStream {\r\n\r\n    #chunkSize;\r\n    #fileStreamWriterAsync;\r\n\r\n    constructor(chunkSize) {\r\n        this.#chunkSize = chunkSize;\r\n    }\r\n\r\n    readAsync(file, typeOfReading, onLoadFileCallback, onLoadChunkCallback) {\r\n        if (!this.#chunkSize) {\r\n            throw new FileStreamException(\"Chunk size should exists and not be equals to zero!\");\r\n        }\r\n        if (!file) {\r\n            throw new FileStreamException(\"File should exists!\");\r\n        }\r\n        if (!typeOfReading) {\r\n            throw new FileStreamException(\"Type of reading should exists!\");\r\n        }\r\n        if (!Object.values(readTypes).includes(typeOfReading)) {\r\n            throw new FileStreamException(\"Incorrect type of reading!\");\r\n        }\r\n        if (file.size < this.#chunkSize) {\r\n            this.#chunkSize = file.size;\r\n        }\r\n        const start = 0;\r\n        const stop = this.#chunkSize;\r\n        const step = this.#chunkSize;\r\n        const fileStreamReaderAsync = new FileStreamReaderAsync(start, stop, step, typeOfReading);\r\n        fileStreamReaderAsync.read(file, onLoadFileCallback, onLoadChunkCallback);\r\n    }\r\n\r\n    readAsyncPromise(file, typeOfReading, onLoadFileCallback, onLoadChunkCallback) {\r\n        const params = {\r\n            chunkSize: this.#chunkSize,\r\n            file,\r\n            typeOfReading,\r\n            onLoadFileCallback,\r\n            onLoadChunkCallback\r\n        };\r\n        const fileStreamReaderAsyncPromise = new FileStreamReaderAsyncPromise();\r\n        return fileStreamReaderAsyncPromise\r\n            .validate(params)\r\n            .then(params => fileStreamReaderAsyncPromise.read(params));\r\n    }\r\n\r\n    writeAsync(file, chunk, onWriteChunkCallback) {\r\n        if (!file) {\r\n            throw new FileStreamException(\"File should exists!\");\r\n        }\r\n        if (!chunk) {\r\n            throw new FileStreamException(\"Chunk should exists!\");\r\n        }\r\n        if (!this.#fileStreamWriterAsync) {\r\n            this.#fileStreamWriterAsync = new FileStreamWriterAsync(file);\r\n        }\r\n        this.#fileStreamWriterAsync.write(chunk, onWriteChunkCallback);\r\n    }\r\n\r\n    close(onWriteFileCallback) {\r\n        if (this.#fileStreamWriterAsync) {\r\n            this.#fileStreamWriterAsync.close(onWriteFileCallback);\r\n        }\r\n    }\r\n}\r\n\r\nclass FileStreamException {\r\n\r\n    #message;\r\n\r\n    constructor(message) {\r\n        this.#message = message;\r\n    }\r\n\r\n    get message() {\r\n        return this.#message;\r\n    }\r\n}\r\n\r\nclass FileStreamReaderAsync {\r\n\r\n    #start;\r\n    #stop;\r\n    #step;\r\n    #typeOfReading;\r\n    #fileReader;\r\n\r\n    constructor(start, stop, step, typeOfReading) {\r\n        this.#start = start;\r\n        this.#stop = stop;\r\n        this.#step = step;\r\n        this.#typeOfReading = typeOfReading;\r\n        this.#fileReader = new FileReader();\r\n    }\r\n\r\n    read(file, onLoadFileCallback, onLoadChunkCallback) {\r\n        this.#fileReader.onloadend = event => {\r\n            if (this.#start >= file.size) {\r\n                if (onLoadFileCallback) {\r\n                    onLoadFileCallback(file);\r\n                }\r\n                return;\r\n            }\r\n            if (onLoadChunkCallback) {\r\n                onLoadChunkCallback(file, event);\r\n            }\r\n            this.#start += this.#step;\r\n            this.#stop += this.#step;\r\n            this.read(file, onLoadFileCallback, onLoadChunkCallback);\r\n        };\r\n        this.#fileReader[this.#typeOfReading](file.slice(this.#start, this.#stop));\r\n    }\r\n}\r\n\r\nclass FileStreamReaderAsyncPromise {\r\n\r\n    validate = params => new Promise((resolve, reject) => {\r\n        if (!params.chunkSize) {\r\n            reject(\"Chunk size should exists and not be equals to zero!\");\r\n        }\r\n        if (!params.file) {\r\n            reject(\"Chunk size should exists and not be equals to zero!\");\r\n        }\r\n        if (!params.typeOfReading) {\r\n            reject(\"Type of reading should exists!\");\r\n        }\r\n        if (!Object.values(readTypes).includes(params.typeOfReading)) {\r\n            reject(\"Incorrect type of reading!\");\r\n        }\r\n        if (params.file.size < params.chunkSize) {\r\n            params.chunkSize = params.file.size;\r\n        }\r\n        params.start = 0;\r\n        params.stop = params.chunkSize;\r\n        params.step = params.chunkSize;\r\n        resolve(params);\r\n    });\r\n\r\n    read(params) {\r\n        const fileReader = new FileReader();\r\n        return new Promise(function next(resolve, reject) {\r\n            fileReader.onloadend = event => {\r\n                if (params.onLoadChunkCallback) {\r\n                    params.onLoadChunkCallback(params.file, event);\r\n                }\r\n                params.start += params.step;\r\n                params.stop += params.step;\r\n                if (params.start >= params.file.size) {\r\n                    if (params.onLoadFileCallback) {\r\n                        params.onLoadFileCallback(params.file);\r\n                    }\r\n                    resolve(params.file);\r\n                } else {\r\n                    next(resolve, reject);\r\n                }\r\n            };\r\n            fileReader[params.typeOfReading](params.file.slice(params.start, params.stop));\r\n        });\r\n    }\r\n}\r\n\r\nclass FileStreamWriterAsync {\r\n\r\n    #file;\r\n    #writer;\r\n    #encode;\r\n\r\n    constructor(file) {\r\n        this.#file = file;\r\n        const fileStream = streamSaver.createWriteStream(this.#file.name);\r\n        this.#writer = fileStream.getWriter();\r\n        this.#encode = TextEncoder.prototype.encode.bind(new TextEncoder());\r\n        window.isSecureContext && window.addEventListener(\"beforeunload\", this.#onExitPage);\r\n    }\r\n\r\n    #onExitPage = () => {\r\n        this.#writer.abort();\r\n    };\r\n\r\n    write(chunk, onWriteChunkCallback) {\r\n        const data = this.#encode(chunk.target.result);\r\n        data && this.#writer.write(data);\r\n        if (onWriteChunkCallback) {\r\n            onWriteChunkCallback(this.#file, data);\r\n        }\r\n    }\r\n\r\n    close(onWriteFileCallback) {\r\n        if (this.#writer) {\r\n            this.#writer.close();\r\n        }\r\n        window.removeEventListener(\"beforeunload\", this.#onExitPage);\r\n        if (onWriteFileCallback) {\r\n            onWriteFileCallback(this.#file);\r\n        }\r\n    }\r\n}\r\n","import * as types from '../constants/actionTypes';\r\n\r\nimport {startPreloader, finishPreloader} from './preloaderActions';\r\nimport {FileStream, readTypes} from '../js/FileStream';\r\n\r\nexport const onDropFiles = (acceptedFiles, rejectedFiles, chunkSize) => dispatch => {\r\n    dispatch(startPreloader());\r\n    acceptedFiles.sort((leftFile, rightFile) => leftFile.size - rightFile.size);\r\n    dispatch(startFilesProcessing({acceptedFiles, rejectedFiles}));\r\n    try {\r\n        acceptedFiles.forEach((file, index) => {\r\n            const fileStream = new FileStream(chunkSize);\r\n            fileStream.readAsync(\r\n                file,\r\n                readTypes.AS_TEXT,\r\n                file => {\r\n                    dispatch(fileIsLoaded(file));\r\n                    fileStream.close(file => {\r\n                        dispatch(fileIsWritten(file));\r\n                        if (index === acceptedFiles.length - 1) {\r\n                            dispatch(finishFilesProcessing());\r\n                            dispatch(finishPreloader());\r\n                        }\r\n                    });\r\n                },\r\n                (file, event) => {\r\n                    console.log(\"File is loading:\", file.name, \"Loaded chunk size:\", event.loaded, \"bytes\");\r\n                    fileStream.writeAsync(\r\n                        file,\r\n                        event,\r\n                        (file, data) => console.log(\"File is writing:\", file.name)\r\n                    );\r\n                }\r\n            );\r\n        });\r\n    } catch (e) {\r\n        dispatch(finishFilesProcessing());\r\n        dispatch(filesProcessingError(e.message));\r\n        dispatch(finishPreloader());\r\n    }\r\n};\r\n\r\nconst startFilesProcessing = files => {\r\n    return {\r\n        type: types.START_FILES_PROCESSING_TYPE,\r\n        payload: files\r\n    }\r\n};\r\n\r\nconst fileIsLoaded = file => {\r\n    return {\r\n        type: types.FILE_IS_LOADED_TYPE,\r\n        payload: file\r\n    }\r\n};\r\n\r\nconst fileIsWritten = file => {\r\n    return {\r\n        type: types.FILE_IS_WRITTEN_TYPE,\r\n        payload: file\r\n    }\r\n};\r\n\r\nconst finishFilesProcessing = () => {\r\n    return {\r\n        type: types.FINISH_FILES_PROCESSING_TYPE\r\n    }\r\n};\r\n\r\nconst filesProcessingError = message => {\r\n    return {\r\n        type: types.FILES_PROCESSING_ERROR_TYPE,\r\n        payload: message\r\n    }\r\n};\r\n","import * as types from '../constants/actionTypes';\r\n\r\nexport const startPreloader = () => {\r\n    return {\r\n        type: types.START_PRELOADER_TYPE,\r\n        payload: true\r\n    }\r\n};\r\n\r\nexport const finishPreloader = () => {\r\n    return {\r\n        type: types.FINISH_PRELOADER_TYPE,\r\n        payload: false\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nimport styles from './ChunkPicker.module.css';\r\n\r\nclass ChunkPicker extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const {setChunkSize} = this.props;\r\n        setChunkSize(Number(event.target.value));\r\n    }\r\n\r\n    showListOfRadioButtons() {\r\n        const {chunkSizeValues} = this.props;\r\n        return chunkSizeValues.map((size, index) => {\r\n            return (\r\n                <FormControlLabel id={`radio-${index}`}\r\n                                  key={`radio-${index}`}\r\n                                  classes={{label: styles.FormControlLabel}}\r\n                                  value={size.value.toString()}\r\n                                  control={<Radio color={\"secondary\"}/>}\r\n                                  label={size.key}\r\n                                  labelPlacement={\"top\"}/>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {chunkPicker} = this.props;\r\n        return (\r\n            <div id={\"ChunkPicker\"}\r\n                 className={styles.ChunkPicker}>\r\n                <FormControl>\r\n                    <FormLabel classes={{root: styles.FormLabel}}\r\n                               focused={false}>\r\n                        Chunk Size\r\n                    </FormLabel>\r\n                    <RadioGroup className={styles.RadioGroup}\r\n                                value={chunkPicker.chunkSize.toString()}\r\n                                aria-label={\"position\"}\r\n                                name={\"position\"}\r\n                                onChange={this.handleOnChange}>\r\n                        {this.showListOfRadioButtons()}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChunkPicker.propTypes = {\r\n    chunkPicker: PropTypes.object.isRequired,\r\n    chunkSizeValues: PropTypes.array.isRequired,\r\n    setChunkSize: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ChunkPicker;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport styles from './DropZone.module.css';\r\n\r\nclass DropZone extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.handleOnDrop = this.handleOnDrop.bind(this);\r\n    }\r\n\r\n    handleOnDrop(acceptedFiles, rejectedFiles) {\r\n        const {chunkPicker} = this.props;\r\n        const {onDropFiles} = this.props;\r\n        onDropFiles(acceptedFiles, rejectedFiles, chunkPicker.chunkSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"DropZone\"}\r\n                 className={styles.DropZone}>\r\n                <Dropzone onDrop={this.handleOnDrop}\r\n                          className={styles.Dropzone}>\r\n                    Drop file's here\r\n                </Dropzone>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDropZone.propTypes = {\r\n    chunkPicker: PropTypes.object.isRequired,\r\n    onDropFiles: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ChunkPicker from '../ChunkPicker/ChunkPicker';\r\nimport DropZone from '../DropZone/DropZone';\r\nimport styles from './Main.module.css';\r\n\r\nconst Main = props => {\r\n    const {chunkPicker, chunkSizeValues} = props;\r\n    const {setChunkSize, onDropFiles} = props;\r\n    return (\r\n        <div id={\"Main\"}\r\n             className={styles.Main}>\r\n            <ChunkPicker chunkPicker={chunkPicker}\r\n                         chunkSizeValues={chunkSizeValues}\r\n                         setChunkSize={setChunkSize}/>\r\n            <DropZone chunkPicker={chunkPicker}\r\n                      onDropFiles={onDropFiles}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {\r\n    chunkPicker: PropTypes.object.isRequired,\r\n    chunkSizeValues: PropTypes.array.isRequired,\r\n    setChunkSize: PropTypes.func.isRequired,\r\n    onDropFiles: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MDSpinner from 'react-md-spinner';\r\n\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = props => {\r\n    const {size, colors} = props;\r\n    return (\r\n        <div id={\"Preloader\"}\r\n             className={styles.Preloader}>\r\n            <MDSpinner size={size}\r\n                       color1={colors[0]}\r\n                       color2={colors[1]}\r\n                       color3={colors[2]}\r\n                       color4={colors[3]}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nPreloader.propTypes = {\r\n    size: PropTypes.number.isRequired,\r\n    colors: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Preloader;\r\n","export const preloaderColors = [\r\n    '#aaffaa',\r\n    '#008800',\r\n    '#ffaa00',\r\n    '#ff0000',\r\n];\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {setChunkSize} from '../../actions/chunkPickerAction';\r\nimport {onDropFiles} from '../../actions/fileActions';\r\nimport Main from './Main';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport * as appConstants from '../../constants/appConstants';\r\nimport * as colors from '../../constants/colors';\r\n\r\nclass MainContainer extends Component {\r\n\r\n    getMainComponent() {\r\n        const {chunkPicker} = this.props;\r\n        const {setChunkSize, onDropFiles} = this.props;\r\n        const chunkSizeValues = [\r\n            {\r\n                key: \"8 B\",\r\n                value: appConstants.EIGHT_BYTES\r\n            },\r\n            {\r\n                key: \"1 KB\",\r\n                value: appConstants.ONE_KILOBYTE\r\n            },\r\n            {\r\n                key: \"1 MB\",\r\n                value: appConstants.ONE_MEGABYTE\r\n            },\r\n            {\r\n                key: \"10 MB\",\r\n                value: appConstants.TEN_MEGABYTES\r\n            },\r\n            {\r\n                key: \"100 MB\",\r\n                value: appConstants.ONE_HUNDRED_MEGABYTES\r\n            },\r\n            {\r\n                key: \"1 GB\",\r\n                value: appConstants.ONE_GIGABYTE\r\n            }\r\n        ];\r\n        return <Main chunkPicker={chunkPicker}\r\n                     chunkSizeValues={chunkSizeValues}\r\n                     setChunkSize={setChunkSize}\r\n                     onDropFiles={onDropFiles}/>\r\n    }\r\n\r\n    getPreloaderComponent() {\r\n        const {preloader} = this.props;\r\n        if (preloader.showPreloader) {\r\n            return <Preloader size={appConstants.PRELOADER_SIZE}\r\n                              colors={colors.preloaderColors}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"MainContainer\"}>\r\n                {this.getMainComponent()}\r\n                {this.getPreloaderComponent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        chunkPicker: state.chunkPicker,\r\n        preloader: state.preloader\r\n    };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        setChunkSize,\r\n        onDropFiles\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(MainContainer);\r\n","import React from 'react';\r\nimport {Route, IndexRedirect} from 'react-router';\r\n\r\nimport * as routing from './constants/routing';\r\nimport App from './components/App/App';\r\nimport MainContainer from './components/Main/MainContainer';\r\n\r\nexport default (\r\n    <div>\r\n        <Route path={routing.ROOT_ROUTE} component={App}>\r\n            <IndexRedirect to={routing.MAIN_ROUTE}/>\r\n            <Route path={routing.MAIN_ROUTE} component={MainContainer}/>\r\n            <Route path={routing.OTHER_ROUTE} component={MainContainer}/>\r\n        </Route>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {syncHistoryWithStore} from 'react-router-redux';\r\nimport {Router} from 'react-router';\r\n\r\nimport configureStore from './store/configureStore';\r\nimport {browserHistory} from './history/history';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport routes from './routes';\r\n\r\nconst store = configureStore();\r\nconst history = syncHistoryWithStore(browserHistory, store);\r\n\r\nserviceWorker.register();\r\n\r\nconst component = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Router history={history}>\r\n                {routes}\r\n            </Router>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(component, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChunkPicker\":\"ChunkPicker_ChunkPicker__QgZrP\",\"FormLabel\":\"ChunkPicker_FormLabel__aock9\",\"RadioGroup\":\"ChunkPicker_RadioGroup__1KVSP\",\"FormControlLabel\":\"ChunkPicker_FormControlLabel__3gLdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropZone\":\"DropZone_DropZone__2aEus\",\"Dropzone\":\"DropZone_Dropzone__2sLPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__tzqGW\"};"],"sourceRoot":""}