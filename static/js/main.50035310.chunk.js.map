{"version":3,"sources":["components/DropZone/DropZone.module.css","components/App/App.module.css","components/Main/Main.module.css","components/Preloader/Preloader.module.css","history/history.js","constants/api.js","reducers/preloaderReducer.js","reducers/reducers.js","constants/actionTypes.js","store/configureStore.js","store/localStorage.js","serviceWorker.js","constants/routing.js","components/App/App.js","js/FileStream.js","actions/fileActions.js","actions/preloaderActions.js","constants/appConstants.js","components/DropZone/DropZone.js","components/Main/Main.js","components/Preloader/Preloader.js","constants/colors.js","components/Main/MainContainer.js","routes.js","index.js"],"names":["module","exports","DropZone","Dropzone","App","Main","Preloader","browserHistory","useRouterHistory","createHistory","basename","initialState","showPreloader","reducers","combineReducers","routing","routerReducer","preloader","state","arguments","length","undefined","action","type","Object","objectSpread","payload","configureStore","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","logger","createLogger","router","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","throttle","stringify","setItem","_unused","saveState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","props","children","react_default","a","createElement","id","className","styles","readTypes","AS_BINARY_STRING","AS_TEXT","AS_DATA_URL","AS_ARRAY_BUFFER","FileStream","chunkSize","classCallCheck","this","defineProperty","_chunkSize","writable","value","classPrivateFieldLooseBase","createClass","key","file","typeOfReading","onLoadFileCallback","onLoadChunkCallback","FileStreamException","values","includes","size","stop","step","FileStreamReaderAsync","read","params","fileStreamReaderAsyncPromise","FileStreamReaderAsyncPromise","validate","message","_message","start","_start","_stop","_step","_typeOfReading","_fileReader","FileReader","_this","onloadend","event","slice","Promise","resolve","reject","fileReader","next","onDropFiles","acceptedFiles","rejectedFiles","dispatch","sort","leftFile","rightFile","startFilesProcessing","forEach","index","readAsync","fileIsLoaded","finishFilesProcessing","name","loaded","e","filesProcessingError","files","context","possibleConstructorReturn","getPrototypeOf","call","handleOnDrop","bind","assertThisInitialized","dist_es","onDrop","Component","components_DropZone_DropZone","colors","react_md_spinner_esm","color1","color2","color3","color4","preloaderColors","MainContainer","components_Main_Main","components_Preloader_Preloader","getMainComponent","getPreloaderComponent","connect","bindActionCreators","routes","react_router_es","path","component","to","history","syncHistoryWithStore","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","es","BrowserRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50035310.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropZone\":\"DropZone_DropZone__2aEus\",\"Dropzone\":\"DropZone_Dropzone__2sLPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__tzqGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__22WzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__PcQp7\"};","import {useRouterHistory} from 'react-router';\r\nimport {createHistory} from 'history';\r\n\r\nimport * as api from '../constants/api';\r\n\r\nexport const browserHistory = useRouterHistory(createHistory)({\r\n    basename: api.BASE_URL\r\n});\r\n","export const BASE_URL = \"/file.stream.app\";\r\n","import * as types from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    showPreloader: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.START_PRELOADER_TYPE: {\r\n            return {\r\n                ...state,\r\n                showPreloader: action.payload\r\n            }\r\n        }\r\n        case types.FINISH_PRELOADER_TYPE: {\r\n            return {\r\n                ...state,\r\n                showPreloader: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport {routerReducer} from 'react-router-redux';\r\n\r\nimport preloaderReducer from './preloaderReducer';\r\n\r\nconst reducers = combineReducers({\r\n    routing: routerReducer,\r\n    preloader: preloaderReducer,\r\n});\r\n\r\nexport default reducers;\r\n","export const START_FILES_PROCESSING_TYPE = \"START_FILES_PROCESSING_TYPE\";\r\nexport const FILE_IS_LOADED_TYPE = \"FILE_IS_LOADED_TYPE\";\r\nexport const FINISH_FILES_PROCESSING_TYPE = \"FINISH_FILES_PROCESSING_TYPE\";\r\nexport const FILES_PROCESSING_ERROR_TYPE = \"FILES_PROCESSING_ERROR_TYPE\";\r\nexport const START_PRELOADER_TYPE = \"START_PRELOADER_TYPE\";\r\nexport const FINISH_PRELOADER_TYPE = \"FINISH_PRELOADER_TYPE\";\r\n","import {applyMiddleware, createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger';\r\nimport {routerMiddleware} from 'react-router-redux';\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport {loadState, saveState} from './localStorage';\r\nimport {browserHistory} from '../history/history';\r\nimport reducers from '../reducers/reducers';\r\n\r\nconst configureStore = () => {\r\n    const persistedState = loadState();\r\n    const logger = createLogger();\r\n    const router = routerMiddleware(browserHistory);\r\n    const store = createStore(reducers, persistedState, composeWithDevTools(applyMiddleware(thunk, logger, router)));\r\n    store.subscribe(throttle(() => {\r\n        saveState({});\r\n    }, 1000));\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (module.hot) {\r\n            module.hot.accept(\"../reducers/reducers\", () => {\r\n                store.replaceReducer(reducers);\r\n            });\r\n        }\r\n    }\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(\"state\");\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = state => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem(\"state\", serializedState);\r\n    } catch {\r\n    }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                        \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","export const ROOT_ROUTE = \"/\";\r\nexport const MAIN_ROUTE = \"/main\";\r\nexport const OTHER_ROUTE = \"*\";\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './App.module.css';\r\n\r\nconst App = props => {\r\n    const {children} = props;\r\n    return (\r\n        <div id={\"App\"}\r\n             className={styles.App}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nApp.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default App;\r\n","export const readTypes = {\r\n    AS_BINARY_STRING: \"readAsBinaryString\",\r\n    AS_TEXT: \"readAsText\",\r\n    AS_DATA_URL: \"readAsDataURL\",\r\n    AS_ARRAY_BUFFER: \"readAsArrayBuffer\"\r\n};\r\n\r\nexport class FileStream {\r\n\r\n    #chunkSize;\r\n\r\n    constructor(chunkSize) {\r\n        this.#chunkSize = chunkSize;\r\n    }\r\n\r\n    readAsync(file, typeOfReading, onLoadFileCallback, onLoadChunkCallback) {\r\n        if (!this.#chunkSize) {\r\n            throw new FileStreamException(\"Chunk size should exists and not be equals to zero!\");\r\n        }\r\n        if (!file) {\r\n            throw new FileStreamException(\"File should exists!\");\r\n        }\r\n        if (!typeOfReading) {\r\n            throw new FileStreamException(\"Type of reading should exists!\");\r\n        }\r\n        if (!Object.values(readTypes).includes(typeOfReading)) {\r\n            throw new FileStreamException(\"Incorrect type of reading!\");\r\n        }\r\n        if (file.size < this.#chunkSize) {\r\n            this.#chunkSize = file.size;\r\n        }\r\n        const start = 0;\r\n        const stop = this.#chunkSize;\r\n        const step = this.#chunkSize;\r\n        const fileStreamReaderAsync = new FileStreamReaderAsync(start, stop, step, typeOfReading);\r\n        fileStreamReaderAsync.read(file, onLoadFileCallback, onLoadChunkCallback);\r\n    }\r\n\r\n    readAsyncPromise(file, typeOfReading, onLoadFileCallback, onLoadChunkCallback) {\r\n        const params = {\r\n            chunkSize: this.#chunkSize,\r\n            file,\r\n            typeOfReading,\r\n            onLoadFileCallback,\r\n            onLoadChunkCallback\r\n        };\r\n        const fileStreamReaderAsyncPromise = new FileStreamReaderAsyncPromise();\r\n        return fileStreamReaderAsyncPromise\r\n            .validate(params)\r\n            .then(params => fileStreamReaderAsyncPromise.read(params));\r\n    }\r\n}\r\n\r\nclass FileStreamException {\r\n\r\n    #message;\r\n\r\n    constructor(message) {\r\n        this.#message = message;\r\n    }\r\n\r\n    get message() {\r\n        return this.#message;\r\n    }\r\n}\r\n\r\nclass FileStreamReaderAsync {\r\n\r\n    #start;\r\n    #stop;\r\n    #step;\r\n    #typeOfReading;\r\n    #fileReader;\r\n\r\n    constructor(start, stop, step, typeOfReading) {\r\n        this.#start = start;\r\n        this.#stop = stop;\r\n        this.#step = step;\r\n        this.#typeOfReading = typeOfReading;\r\n        this.#fileReader = new FileReader();\r\n    }\r\n\r\n    read(file, onLoadFileCallback, onLoadChunkCallback) {\r\n        this.#fileReader.onloadend = event => {\r\n            if (this.#start >= file.size) {\r\n                if (onLoadFileCallback) {\r\n                    onLoadFileCallback(file);\r\n                }\r\n                return;\r\n            }\r\n            if (onLoadChunkCallback) {\r\n                onLoadChunkCallback(file, event);\r\n            }\r\n            this.#start += this.#step;\r\n            this.#stop += this.#step;\r\n            this.read(file, onLoadFileCallback, onLoadChunkCallback);\r\n        };\r\n        this.#fileReader[this.#typeOfReading](file.slice(this.#start, this.#stop));\r\n    }\r\n}\r\n\r\nclass FileStreamReaderAsyncPromise {\r\n\r\n    validate = params => new Promise((resolve, reject) => {\r\n        if (!params.chunkSize) {\r\n            reject(\"Chunk size should exists and not be equals to zero!\");\r\n        }\r\n        if (!params.file) {\r\n            reject(\"Chunk size should exists and not be equals to zero!\");\r\n        }\r\n        if (!params.typeOfReading) {\r\n            reject(\"Type of reading should exists!\");\r\n        }\r\n        if (!Object.values(readTypes).includes(params.typeOfReading)) {\r\n            reject(\"Incorrect type of reading!\");\r\n        }\r\n        if (params.file.size < params.chunkSize) {\r\n            params.chunkSize = params.file.size;\r\n        }\r\n        params.start = 0;\r\n        params.stop = params.chunkSize;\r\n        params.step = params.chunkSize;\r\n        resolve(params);\r\n    });\r\n\r\n    read(params) {\r\n        const fileReader = new FileReader();\r\n        return new Promise(function next(resolve, reject) {\r\n            fileReader.onloadend = event => {\r\n                if (params.onLoadChunkCallback) {\r\n                    params.onLoadChunkCallback(params.file, event);\r\n                }\r\n                params.start += params.step;\r\n                params.stop += params.step;\r\n                if (params.start >= params.file.size) {\r\n                    if (params.onLoadFileCallback) {\r\n                        params.onLoadFileCallback(params.file);\r\n                    }\r\n                    resolve(params.file);\r\n                } else {\r\n                    next(resolve, reject);\r\n                }\r\n            };\r\n            fileReader[params.typeOfReading](params.file.slice(params.start, params.stop));\r\n        });\r\n    }\r\n}\r\n","import * as types from '../constants/actionTypes';\r\n\r\nimport {startPreloader, finishPreloader} from './preloaderActions';\r\nimport {FileStream, readTypes} from '../js/FileStream';\r\nimport * as appConstants from '../constants/appConstants';\r\n\r\nexport const onDropFiles = (acceptedFiles, rejectedFiles) => dispatch => {\r\n    dispatch(startPreloader());\r\n    acceptedFiles.sort((leftFile, rightFile) => leftFile.size - rightFile.size);\r\n    dispatch(startFilesProcessing({acceptedFiles, rejectedFiles}));\r\n    try {\r\n        acceptedFiles.forEach((file, index) => {\r\n            const fileStream = new FileStream(appConstants.TEN_MEGABYTES);\r\n            fileStream.readAsync(\r\n                file,\r\n                readTypes.AS_TEXT,\r\n                file => {\r\n                    dispatch(fileIsLoaded(file));\r\n                    if (index === acceptedFiles.length - 1) {\r\n                        dispatch(finishFilesProcessing());\r\n                        dispatch(finishPreloader());\r\n                    }\r\n                },\r\n                (file, event) => {\r\n                    console.log(\"File is loading:\", file.name, \"Loaded chunk size:\", event.loaded, \"bytes\");\r\n                }\r\n            );\r\n        });\r\n    } catch (e) {\r\n        dispatch(finishFilesProcessing());\r\n        dispatch(filesProcessingError(e.message));\r\n        dispatch(finishPreloader());\r\n    }\r\n};\r\n\r\nconst startFilesProcessing = files => {\r\n    return {\r\n        type: types.START_FILES_PROCESSING_TYPE,\r\n        payload: files\r\n    }\r\n};\r\n\r\nconst fileIsLoaded = file => {\r\n    return {\r\n        type: types.FILE_IS_LOADED_TYPE,\r\n        payload: file\r\n    }\r\n};\r\n\r\nconst finishFilesProcessing = () => {\r\n    return {\r\n        type: types.FINISH_FILES_PROCESSING_TYPE\r\n    }\r\n};\r\n\r\nconst filesProcessingError = message => {\r\n    return {\r\n        type: types.FILES_PROCESSING_ERROR_TYPE,\r\n        payload: message\r\n    }\r\n};\r\n","import * as types from '../constants/actionTypes';\r\n\r\nexport const startPreloader = () => {\r\n    return {\r\n        type: types.START_PRELOADER_TYPE,\r\n        payload: true\r\n    }\r\n};\r\n\r\nexport const finishPreloader = () => {\r\n    return {\r\n        type: types.FINISH_PRELOADER_TYPE,\r\n        payload: false\r\n    }\r\n};\r\n","export const PRELOADER_SIZE = 48;\r\nexport const EIGHT_BYTES = 8;\r\nexport const ONE_KILOBYTE = 1024;\r\nexport const ONE_MEGABYTE = 1048576;\r\nexport const TEN_MEGABYTES = 10485760;\r\nexport const ONE_HUNDRED_MEGABYTES = 104857600;\r\nexport const ONE_GIGABYTE = 1073741824;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport styles from './DropZone.module.css';\r\n\r\nclass DropZone extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.handleOnDrop = this.handleOnDrop.bind(this);\r\n    }\r\n\r\n    handleOnDrop(acceptedFiles, rejectedFiles) {\r\n        const {onDropFiles} = this.props;\r\n        onDropFiles(acceptedFiles, rejectedFiles);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"DropZone\"}\r\n                 className={styles.DropZone}>\r\n                <Dropzone onDrop={this.handleOnDrop}\r\n                          className={styles.Dropzone}>\r\n                    Drop file's here\r\n                </Dropzone>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDropZone.propTypes = {\r\n    onDropFiles: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DropZone from '../DropZone/DropZone';\r\nimport styles from './Main.module.css';\r\n\r\nconst Main = props => {\r\n    const {onDropFiles} = props;\r\n    return (\r\n        <div id={\"Main\"}\r\n             className={styles.Main}>\r\n            <DropZone onDropFiles={onDropFiles}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {\r\n    onDropFiles: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MDSpinner from 'react-md-spinner';\r\n\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = props => {\r\n    const {size, colors} = props;\r\n    return (\r\n        <div id={\"Preloader\"}\r\n             className={styles.Preloader}>\r\n            <MDSpinner size={size}\r\n                       color1={colors[0]}\r\n                       color2={colors[1]}\r\n                       color3={colors[2]}\r\n                       color4={colors[3]}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nPreloader.propTypes = {\r\n    size: PropTypes.number.isRequired,\r\n    colors: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Preloader;\r\n","export const preloaderColors = [\r\n    '#aaffaa',\r\n    '#008800',\r\n    '#ffaa00',\r\n    '#ff0000',\r\n];\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {onDropFiles} from '../../actions/fileActions';\r\nimport Main from './Main';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport * as appConstants from '../../constants/appConstants';\r\nimport * as colors from '../../constants/colors';\r\n\r\nclass MainContainer extends Component {\r\n\r\n    getMainComponent() {\r\n        const {onDropFiles} = this.props;\r\n        return <Main onDropFiles={onDropFiles}/>\r\n    }\r\n\r\n    getPreloaderComponent() {\r\n        const {preloader} = this.props;\r\n        if (preloader.showPreloader) {\r\n            return <Preloader size={appConstants.PRELOADER_SIZE}\r\n                              colors={colors.preloaderColors}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"MainContainer\"}>\r\n                {this.getMainComponent()}\r\n                {this.getPreloaderComponent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        preloader: state.preloader\r\n    };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        onDropFiles\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(MainContainer);\r\n","import React from 'react';\r\nimport {Route, IndexRedirect} from 'react-router';\r\n\r\nimport * as routing from './constants/routing';\r\nimport App from './components/App/App';\r\nimport MainContainer from './components/Main/MainContainer';\r\n\r\nexport default (\r\n    <div>\r\n        <Route path={routing.ROOT_ROUTE} component={App}>\r\n            <IndexRedirect to={routing.MAIN_ROUTE}/>\r\n            <Route path={routing.MAIN_ROUTE} component={MainContainer}/>\r\n            <Route path={routing.OTHER_ROUTE} component={MainContainer}/>\r\n        </Route>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {syncHistoryWithStore} from 'react-router-redux';\r\nimport {Router} from 'react-router';\r\n\r\nimport configureStore from './store/configureStore';\r\nimport {browserHistory} from './history/history';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport routes from './routes';\r\n\r\nconst store = configureStore();\r\nconst history = syncHistoryWithStore(browserHistory, store);\r\n\r\nserviceWorker.register();\r\n\r\nconst component = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Router history={history}>\r\n                {routes}\r\n            </Router>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(component, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}